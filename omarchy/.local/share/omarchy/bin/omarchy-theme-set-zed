#!/bin/bash

# Note: We cannot use `jq` to update settings.json because it's JSONC (allows comments),
# which jq doesn't support.

LOG_FILE="/tmp/omarchy-theme-set-zed.log"
echo "=== $(date) ===" >> "$LOG_FILE"
echo "Script called" >> "$LOG_FILE"

ZED_THEME="$HOME/.config/omarchy/current/theme/zed.json"
ZED_SETTINGS="$HOME/.config/zed/settings.json"
ZED_SKIP_FLAG="$HOME/.local/state/omarchy/toggles/skip-zed-theme-changes"

echo "Checking conditions..." >> "$LOG_FILE"
echo "ZED_THEME=$ZED_THEME" >> "$LOG_FILE"
echo "ZED_SETTINGS=$ZED_SETTINGS" >> "$LOG_FILE"
echo "ZED_SKIP_FLAG=$ZED_SKIP_FLAG" >> "$LOG_FILE"

# Check if Zed is installed by looking for the installation directory or binary
if [[ -d "$HOME/.local/zed.app" ]] || [[ -f "$HOME/.local/bin/zed" ]] || command -v zed &>/dev/null; then
  echo "✓ Zed is installed" >> "$LOG_FILE"
else
  echo "✗ Zed is NOT installed" >> "$LOG_FILE"
  exit 0
fi

if [[ -f "$ZED_SKIP_FLAG" ]]; then
  echo "✗ Skip flag exists" >> "$LOG_FILE"
  exit 0
fi

if [[ ! -f "$ZED_SKIP_FLAG" ]]; then
  if [[ -f "$ZED_THEME" ]]; then
    echo "✓ ZED_THEME file exists" >> "$LOG_FILE"
    theme_name=$(jq -r '.theme' "$ZED_THEME")
    echo "Theme name: $theme_name" >> "$LOG_FILE"

    # Create config file if there isn't already one
    mkdir -p "$(dirname "$ZED_SETTINGS")"
    if [[ ! -f "$ZED_SETTINGS" ]]; then
      printf '{\n}\n' > "$ZED_SETTINGS"
      echo "Created ZED_SETTINGS file" >> "$LOG_FILE"
    fi

    # Create a `theme` object if it doesn't exist
    if ! grep -q '"theme"' "$ZED_SETTINGS"; then
      # Insert theme object immediately after the first `{`
      sed -i --follow-symlinks -E '0,/\{/{s/\{/{\
  "theme": {\
    "mode": "system",\
    "light": "Ayu Light",\
    "dark": "Ayu Dark"\
  },/}' "$ZED_SETTINGS"
      echo "Created theme object in settings" >> "$LOG_FILE"
    fi

    # Update dark theme in the active config (what Zed actually reads)
    echo "Updating $ZED_SETTINGS with theme: $theme_name" >> "$LOG_FILE"
    sed -i -E \
      "s/(\"dark\"[[:space:]]*:[[:space:]]*\")[^\"]*(\")/\1$theme_name\2/" \
      "$ZED_SETTINGS"

    # Also update the dotfiles version for version control
    # (They may differ if settings.json is a real file, not a symlink)
    ZED_SETTINGS_DOTFILES="$HOME/.dotfiles/zed/.config/zed/settings.json"
    if [ -f "$ZED_SETTINGS_DOTFILES" ] && [ "$ZED_SETTINGS" != "$ZED_SETTINGS_DOTFILES" ]; then
      echo "Also updating dotfiles version" >> "$LOG_FILE"
      sed -i -E \
        "s/(\"dark\"[[:space:]]*:[[:space:]]*\")[^\"]*(\")/\1$theme_name\2/" \
        "$ZED_SETTINGS_DOTFILES"
    fi

    echo "✓ Successfully updated Zed theme to: $theme_name" >> "$LOG_FILE"

    # Notify user (Zed doesn't support CLI extension installation like VSCode)
    if command -v notify-send &>/dev/null; then
      notify-send "   Zed theme set to $theme_name" \
        "Make sure the theme is installed via Zed's Extensions panel"
    fi
  else
    echo "✗ ZED_THEME file does not exist: $ZED_THEME" >> "$LOG_FILE"
  fi
fi

echo "Script completed" >> "$LOG_FILE"
