#!/bin/bash

if [[ -z $1 && $1 != "CNCLD" ]]; then
  echo "Usage: omarchy-theme-set <theme-name>"
  exit 1
fi

THEMES_DIR="$HOME/.config/omarchy/themes/"
CURRENT_THEME_DIR="$HOME/.config/omarchy/current/theme"

THEME_NAME=$(echo "$1" | sed -E 's/<[^>]+>//g' | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
THEME_PATH="$THEMES_DIR/$THEME_NAME"

# Check if the theme entered exists
if [[ ! -d "$THEME_PATH" ]]; then
  echo "Theme '$THEME_NAME' does not exist in $THEMES_DIR"
  exit 1
fi

# Update theme symlinks
ln -nsf "$THEME_PATH" "$CURRENT_THEME_DIR"

# Change background with theme
omarchy-theme-bg-next

# Restart components to apply new theme
omarchy-restart-waybar
omarchy-restart-swayosd
hyprctl reload
pkill -SIGUSR2 btop
makoctl reload

# Change gnome, browser, vscode themes
omarchy-theme-set-terminal
omarchy-theme-set-gnome
omarchy-theme-set-eza
omarchy-theme-set-browser
omarchy-theme-set-vscode

# Generate neovim.lua dynamically from custom_theme.json
THEME_JSON="$CURRENT_THEME_DIR/custom_theme.json"
NEOVIM_LUA="$CURRENT_THEME_DIR/neovim.lua"

if command -v jq &> /dev/null && [[ -f "$THEME_JSON" ]]; then
    THEME_REPO=$(jq -r '.apps.neovim.theme_repo // empty' "$THEME_JSON")
    THEME_NAME=$(jq -r '.apps.neovim.theme_name // empty' "$THEME_JSON")

    if [[ -n "$THEME_NAME" ]]; then
        if [[ -n "$THEME_REPO" ]]; then
            # External plugin theme
            cat > "$NEOVIM_LUA" <<EOF
return {
	{ "$THEME_REPO", lazy = false, priority = 1000 },
	{
		"LazyVim/LazyVim",
		opts = {
			colorscheme = "$THEME_NAME",
		},
	},
}
EOF
        else
            # Local colorscheme (no plugin needed)
            cat > "$NEOVIM_LUA" <<EOF
return {
	{
		"LazyVim/LazyVim",
		opts = {
			colorscheme = "$THEME_NAME",
		},
	},
}
EOF
        fi
    fi
fi
