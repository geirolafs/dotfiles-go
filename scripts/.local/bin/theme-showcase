#!/bin/bash

# Theme Showcase - Display terminal theme colors beautifully

# Color definitions
RESET="\e[0m"
BOLD="\e[1m"

# Print header
echo -e "\n${BOLD}╔═══════════════════════════════════════════════════╗${RESET}"
echo -e "${BOLD}║           Terminal Theme Showcase                ║${RESET}"
echo -e "${BOLD}╚═══════════════════════════════════════════════════╝${RESET}\n"

# Standard colors
echo -e "${BOLD}Standard Colors:${RESET}"
echo -e "  \e[30m███\e[0m Black      \e[90m███\e[0m Bright Black"
echo -e "  \e[31m███\e[0m Red        \e[91m███\e[0m Bright Red"
echo -e "  \e[32m███\e[0m Green      \e[92m███\e[0m Bright Green"
echo -e "  \e[33m███\e[0m Yellow     \e[93m███\e[0m Bright Yellow"
echo -e "  \e[34m███\e[0m Blue       \e[94m███\e[0m Bright Blue"
echo -e "  \e[35m███\e[0m Magenta    \e[95m███\e[0m Bright Magenta"
echo -e "  \e[36m███\e[0m Cyan       \e[96m███\e[0m Bright Cyan"
echo -e "  \e[37m███\e[0m White      \e[97m███\e[0m Bright White\n"

# 256 color palette
echo -e "${BOLD}256 Color Palette:${RESET}"
for i in {0..255}; do
    printf "\e[48;5;%sm  " "$i"
    if [ $(((i + 1) % 16)) -eq 0 ]; then
        echo -e "\e[0m"
    fi
done
echo

# RGB gradient
echo -e "\n${BOLD}RGB Gradient:${RESET}"
for r in {0..5}; do
    for g in {0..5}; do
        for b in {0..5}; do
            color=$((16 + r * 36 + g * 6 + b))
            printf "\e[48;5;%sm " "$color"
        done
        echo -e "\e[0m"
    done
done

# Text styles
echo -e "\n${BOLD}Text Styles:${RESET}"
echo -e "  \e[1mBold\e[0m       \e[2mDim\e[0m        \e[3mItalic\e[0m"
echo -e "  \e[4mUnderline\e[0m  \e[5mBlink\e[0m      \e[7mReverse\e[0m"
echo -e "  \e[9mStrike\e[0m     \e[53mOverline\e[0m\n"

# Theme info
if command -v omarchy-theme-current &> /dev/null; then
    current_theme=$(omarchy-theme-current)
    echo -e "${BOLD}Current Theme:${RESET} \e[32m$current_theme\e[0m"
fi

# Fun gradient banner
echo -e "\n"
gradient_colors=(196 202 208 214 220 226 190 154 118 82 46)
text="  ▄████▄   ▒█████   ██▓     ▒█████   ██▀███    ██████ "
for i in $(seq 0 $((${#text} - 1))); do
    char="${text:$i:1}"
    color_idx=$((i % ${#gradient_colors[@]}))
    color=${gradient_colors[$color_idx]}
    printf "\e[38;5;%sm%s" "$color" "$char"
done
echo -e "\e[0m\n"
